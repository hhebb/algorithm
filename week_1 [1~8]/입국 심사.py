'''
* 유형
    이분 탐색

* 체감 난이도
    ****

* 풀이
    -핵심-
    심사 시간이 가장 적게 걸리는 최단 소요시간부터 1 분 씩 늘려가며
    해당 시간동안 각 심사대에서 처리할 수 있는 인원을 총합한다.
    처리가능 인원의 총합이 n 명에 도달하면 그 소요시간이 답이 된다.

    하지만 이렇게 하면 10 억이라는 반복횟수를 돌기 전에 효율성에서 막힌다.
    이 시점에서 시간에 대해 이분 탐색을 실시한다.
    최단 소요시간 ~ 최악 소요시간 을 각각 left, right 로 설정하고 이분 탐색을 진행한다.

    주의할 것은, 이분 탐색 시 처리가능 인원이 n 에 도달해도 그 시점의 소요시간이 최적 소요시간이 아닐 수 있다.
    그래서 처리가능 인원이 n-1 되기 전까지는 계속 이분 탐색을 한다.

* 기타
    처음에는 각 심사대에 인원을 얼마나 배치하야 최적의 소요 시간이 나오는가 로 접근했다.
    하지만 솔루션이 나오지 않았고 나왔더라도 효율성 처리하기 어려웠을 것.
    역으로 얼마나 소요 시간이 얼마일 때 몇 명의 인원을 처리하는가? 로 접근 해야했다.
    결국 풀이를 참조해서 풀었다. ㅠㅠ
    너무 어렵다  ㅠㅠ

    이분 탐색은 재귀로도 풀 수 있음.


* 주의
    파이썬에서 bisect 안 쓰고 이분 탐색을 직접 구현할 때
    left, right, mid 인덱스에 주의해야 함.

'''


def solution(n, times):
    answer = 0
    left, right = min(times), max(times) * n

    # 이분 탐색
    while left <= right:
        mid = (left + right) // 2
        peoples = 0
        for t in times:
            peoples += mid // t

            # 원래 여기서 break 걸어줘서 for loop 조기종료하면 더 빨리 끝나야하는데
            # 오히려 더 늘어나서 삭제함.
            # if peoples >= n:
            #     break

        # 처리 가능 인원이 n 에 도달해도 1 분 씩 줄여가며 최적의 소요시간을 찾는다.
        if peoples >= n:
            right = mid - 1
            # 그때그때 answer 기록을 해놔야 while 문 갑자기 종료되어도 최적 소요시간을 기억하고 있는다.
            answer = mid
        else:
            left = mid + 1
    return answer